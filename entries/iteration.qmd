---
title: "Time-constrained iterative workflow"
date: last-modified
---

We take inspiration from some aspects of [Agile Software
Development](https://agilemanifesto.org/) and
[Scrum](https://www.scrum.org/resources/what-scrum-module), especially this idea
of time-boxed periods ("iterations") of work that follow a specific pattern and process
for incrementally building or improving things. The reason we don't completely use Agile or Scrum workflows is because these workflows generally don't fit well in more academic and research environments. Scrum and Agile often assumes that:

- We are in a more traditional "business" environment with customers
- Everyone on the team is working only on the project, full-time and completely during the iteration (e.g. with the use of "daily standups"),
- Everyone on the team is highly technically skilled and knowledgeable in software development practices (e.g. with the "self-organizing" principle)
- We have the resources to have dedicated personnel for managing the iteration and planning the product (e.g. with "Scrum Master" and "Product Owner")

However, often in academic and research settings, these assumptions are not relevant or applicable. For instance, often everyone is or may be involved in multiple projects. Or we have a broad and diverse range in technical skills around software development practices, often because research and academic environments don't foster nor support nor are aware of these types of skills and knowledge. All of these impact how effective a Agile or Scrum workflow are in these environments.

Based on these inspirations, an iteration for us follows this general sequence of steps:

1. Team lead sets everything up for the next two or three rounds.
    - Will create a GitHub Project Board for the upcoming iteration using the ["Iteration" template](https://github.com/orgs/seedcase-project/projects/4).
    - Will add the aim, output, as well as the end date of the iteration to be discussed and decided on in the first meeting.
    - Will start adding some tasks into the board.
2. The first planning meeting for the iteration is scheduled well in advance, for between 1-2 hours and right after the previous iteration's debrief. Preferably this meeting is in person.
    - The aim of the meeting to discuss and plan the specifics of the iteration.
    - Before the planning meeting, team members will review the aim and output of the iteration board and write out potential tasks (as GitHub Issues or as drafts on the board) needed to complete the aim.
    - During the meeting, we'll discuss and decide on the end output (the "increment" or "milestone").
    - During the meeting, we'll brainstorm and write out more tasks that are needed to complete the increment or milestone, or select them from the existing list of tasks. 
    - Each team member self-assigns to a task (self-assign to Issue) and estimates the time spent on the tasks by using the Iteration's Roadmap Board. 
    - We'll review whether the number of tasks, time estimation of those tasks, and the aim of the iteration are realistic in the time available.
    - We'll discuss and agree on how long the iteration should be or will take and set a date for the iteration's last meeting.
3. Throughout the iteration, we will:
    - Have our [update meetings](update-meetings.md) to discuss progress, next steps, and any struggles or barriers (with the work or the iteration/process).
    - Work on our assigned tasks.
    - Review Pull Requests from others.
    - Add more Issues if required. If the Issue is relevant to the current iteration, then add it to the Project Board so that we can determine who will self-assign it during one of our meetings. If the Issue isn't relevant, don't add it to the Project Board, and we will save it for future iterations to work on. 
    - Comment on Issues or Pull Requests if tagged or if we have something to add to the discussion.
4. The iteration's last meeting is a debrief to discuss the how things went. These are between 1-2 hours and are preferably in person.
    - How things went and what could be improved in the process.
    - Barriers encountered that we should address for next time.
    - Show off and (optionally) demo the output all together as a team. We'll assign someone to be responsible for showing or trying out the demo before the meeting.
    - (Optionally done occasionally, but strongly suggested) Include someone external (a potential user) to try out the product/demo and give some feedback.
